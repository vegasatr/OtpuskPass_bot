import random
import string
from datetime import datetime, timedelta
from typing import Optional

def generate_referral_code(length: int = 8) -> str:
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞"""
    characters = string.ascii_uppercase + string.digits
    return ''.join(random.choice(characters) for _ in range(length))

def calculate_next_payment_date(start_date: datetime) -> datetime:
    """–†–∞—Å—á–µ—Ç –¥–∞—Ç—ã —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞"""
    return start_date + timedelta(days=30)

def format_apartment_info(apartment: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–≤–∞—Ä—Ç–∏—Ä–µ"""
    return f"""
üè† –ö–≤–∞—Ä—Ç–∏—Ä–∞ –≤ {apartment['city']}

üìç –ê–¥—Ä–µ—Å: {apartment['address']}
üìê –ü–ª–æ—â–∞–¥—å: {apartment['area_sqm']} –º¬≤
üõè –°–ø–∞–ª—å–Ω–∏: {apartment['num_bedrooms']}

üìù –û–ø–∏—Å–∞–Ω–∏–µ:
{apartment['description']}

‚ú® –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
{apartment['features']}

üèñÔ∏è –†—è–¥–æ–º:
{apartment['nearby_attractions']}
"""

def format_subscription_info(subscription: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–ø–∏—Å–∫–µ"""
    return f"""
üìÖ –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏: {subscription['status']}
üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: {subscription['amount_rub']} —Ä—É–±. –≤ –º–µ—Å—è—Ü
üíé –í TON: {subscription['amount_ton']} TON
üìÖ –°–ª–µ–¥—É—é—â–∏–π –ø–ª–∞—Ç–µ–∂: {subscription['next_payment_date']}
"""

def validate_booking_dates(start_date: datetime, end_date: datetime, min_nights: int = 7) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –¥–∞—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"""
    if start_date >= end_date:
        return False
    
    nights = (end_date - start_date).days
    return nights >= min_nights

def format_ton_amount(amount: float) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É–º–º—ã –≤ TON"""
    return f"{amount:.4f} TON"

def get_nearest_available_date(current_date: datetime, min_nights: int = 7) -> datetime:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –±–ª–∏–∂–∞–π—à–µ–π –¥–æ—Å—Ç—É–ø–Ω–æ–π –¥–∞—Ç—ã –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"""
    return current_date + timedelta(days=30 * min_nights) 