#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—É—à–∞ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ Git —Å —É–≤–µ–ª–∏—á–µ–Ω–∏–µ–º –≤–µ—Ä—Å–∏–∏
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/git_push.sh [–æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π]

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—É—à–∞ –ø—Ä–æ–µ–∫—Ç–∞ OtpuskPass Bot${NC}" # –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
if [ ! -f "version.txt" ]; then
    echo -e "${RED}‚ùå –§–∞–π–ª version.txt –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞.${NC}"
    exit 1
fi

# –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é
CURRENT_VERSION=$(cat version.txt | tr -d '\n\r')
echo -e "${YELLOW}üìã –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: ${CURRENT_VERSION}${NC}"

# –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤–µ—Ä—Å–∏—é (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —Ñ–æ—Ä–º–∞—Ç x.y.z)
IFS='.' read -r -a version_parts <<< "$CURRENT_VERSION"
major=${version_parts[0]}
minor=${version_parts[1]}
patch=${version_parts[2]}

# –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º patch –≤–µ—Ä—Å–∏—é
new_patch=$((patch + 1))
NEW_VERSION="${major}.${minor}.${new_patch}"

echo -e "${GREEN}üÜô –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è: ${NEW_VERSION}${NC}"

# –û–±–Ω–æ–≤–ª—è–µ–º version.txt
echo "$NEW_VERSION" > version.txt
echo -e "${GREEN}‚úÖ –í–µ—Ä—Å–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –≤ version.txt${NC}"

# –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
generate_smart_description() {
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    local changes=$(git diff --cached --name-only)
    local added_files=$(git diff --cached --name-status | grep "^A" | wc -l)
    local modified_files=$(git diff --cached --name-status | grep "^M" | wc -l)
    local deleted_files=$(git diff --cached --name-status | grep "^D" | wc -l)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ —Å–æ–∑–¥–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è OtpuskPass_bot
    if echo "$changes" | grep -q "src/main.py"; then # –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –±–æ—Ç–∞
        echo "–í–Ω–µ—Å–µ–Ω—ã –∫–ª—é—á–µ–≤—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å –±–æ—Ç–∞, —É–ª—É—á—à–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥. –î–æ–±–∞–≤–ª–µ–Ω–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏."
    elif echo "$changes" | grep -q "src/web/"; then # Web-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Mini App
        echo "–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ (Mini App) –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–æ–π –∏ –ø—Ä–æ—Ñ–∏–ª–µ–º. –î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ API-—ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –∏ —É–ª—É—á—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤."
    elif echo "$changes" | grep -q "src/database/"; then # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö (models, migrations)
        echo "–í–Ω–µ—Å–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –º–∏–≥—Ä–∞—Ü–∏–∏. –û–±–Ω–æ–≤–ª–µ–Ω—ã –º–æ–¥–µ–ª–∏ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è."
    elif echo "$changes" | grep -q "src/services/ton_payment.py"; then # TON –ø–ª–∞—Ç–µ–∂–∏
        echo "–£—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–∞ –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π –≤ TON. –û–±–Ω–æ–≤–ª–µ–Ω—ã –º–µ—Ö–∞–Ω–∏–∑–º—ã —Ä–∞—Å—á–µ—Ç–∞ —Å—É–º–º—ã –∏ —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π."
    elif echo "$changes" | grep -q "src/services/gemini_service.py"; then # Gemini API
        echo "–û–±–Ω–æ–≤–ª–µ–Ω–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Gemini API –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤."
    elif echo "$changes" | grep -q "src/utils/"; then # –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        echo "–î–æ–±–∞–≤–ª–µ–Ω—ã –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –±–æ—Ç–∞, –≤–∫–ª—é—á–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–æ–¥–æ–≤ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö."
    elif echo "$changes" | grep -q "requirements.txt"; then # –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        echo "–û–±–Ω–æ–≤–ª–µ–Ω —Å–ø–∏—Å–æ–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø—Ä–æ–µ–∫—Ç–∞. –î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤–µ—Ä—Å–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö."
    elif echo "$changes" | grep -q "README\.md"; then # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è README
        echo "–û–±–Ω–æ–≤–ª–µ–Ω–∞ –æ—Å–Ω–æ–≤–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞ (README.md) —Å –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ñ—É–Ω–∫—Ü–∏—è—Ö –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ."
    elif [ "$added_files" -gt 3 ]; then # –ï—Å–ª–∏ –º–Ω–æ–≥–æ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤, –Ω–æ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —É—Å–ª–æ–≤–∏—è –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏
        echo "–î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –º–æ–¥—É–ª–∏, —Ä–∞—Å—à–∏—Ä—è—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –±–æ—Ç–∞. –ü—Ä–æ–≤–µ–¥–µ–Ω–∞ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–∞—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã."
    elif [ "$modified_files" -gt 5 ]; then # –ï—Å–ª–∏ –º–Ω–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        echo "–ú–∞—Å—à—Ç–∞–±–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–¥–æ–≤–æ–π –±–∞–∑—ã —Å —É–ª—É—á—à–µ–Ω–∏—è–º–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏. –ü—Ä–æ–≤–µ–¥–µ–Ω —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è."
    else
        echo "–í—ã–ø–æ–ª–Ω–µ–Ω—ã —Ç–æ—á–µ—á–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã. –£—Å—Ç—Ä–∞–Ω–µ–Ω—ã –º–µ–ª–∫–∏–µ –æ—à–∏–±–∫–∏."
    fi
}

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
if [ -z "$1" ]; then
    # –£–º–Ω–æ–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    DESCRIPTION=$(generate_smart_description)
else
    DESCRIPTION="$1"
fi

echo -e "${YELLOW}üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${DESCRIPTION}${NC}"

# –°–æ–∑–¥–∞–µ–º –∏–º—è –≤–µ—Ç–∫–∏
BRANCH_NAME="v${NEW_VERSION}"
echo -e "${BLUE}üåø –°–æ–∑–¥–∞–Ω–∏–µ –≤–µ—Ç–∫–∏: ${BRANCH_NAME}${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Git
if ! git status &>/dev/null; then
    echo -e "${RED}‚ùå –≠—Ç–æ –Ω–µ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏–ª–∏ Git –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
if ! git remote get-url origin &>/dev/null; then
    echo -e "${RED}‚ùå –£–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π origin –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    echo -e "${YELLOW}üí° –î–æ–±–∞–≤—å—Ç–µ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: git remote add origin <URL>${NC}"
    exit 1
fi

# –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
echo -e "${BLUE}üì¶ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ Git...${NC}"
git add .

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –∫–æ–º–º–∏—Ç–∞
if git diff --cached --quiet; then
    echo -e "${YELLOW}‚ö†Ô∏è  –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞${NC}"
else
    echo -e "${GREEN}‚úÖ –ù–∞–π–¥–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –∫–æ–º–º–∏—Ç–∞${NC}"
fi

# –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç
COMMIT_MESSAGE="v${NEW_VERSION}: ${DESCRIPTION}"
echo -e "${BLUE}üíæ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞: ${COMMIT_MESSAGE}${NC}"
git commit -m "$COMMIT_MESSAGE" || echo -e "${YELLOW}‚ö†Ô∏è  –ö–æ–º–º–∏—Ç –ø—Ä–æ–ø—É—â–µ–Ω (–Ω–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π)${NC}"

# –°–æ–∑–¥–∞–µ–º –∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –Ω–æ–≤—É—é –≤–µ—Ç–∫—É
if git show-ref --verify --quiet refs/heads/$BRANCH_NAME; then
    echo -e "${YELLOW}‚ö†Ô∏è  –í–µ—Ç–∫–∞ ${BRANCH_NAME} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –Ω–µ—ë${NC}"
    git checkout $BRANCH_NAME
else
    echo -e "${BLUE}üåø –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≤–µ—Ç–∫–∏ ${BRANCH_NAME}${NC}"
    git checkout -b $BRANCH_NAME
fi

# –ü—É—à–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
echo -e "${BLUE}üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞ GitHub...${NC}"
git push -u origin $BRANCH_NAME

# –°–æ–∑–¥–∞–µ–º —Ç–µ–≥ –¥–ª—è –≤–µ—Ä—Å–∏–∏ (–∏–∑–±–µ–≥–∞–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ –∏–º–µ–Ω —Å –≤–µ—Ç–∫–æ–π)
TAG_NAME="release-v${NEW_VERSION}"
echo -e "${BLUE}üè∑Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–≥–∞ ${TAG_NAME}${NC}"
git tag -a $TAG_NAME -m "Release v${NEW_VERSION}: ${DESCRIPTION}"
git push origin $TAG_NAME

echo -e "${GREEN}üéâ –£—Å–ø–µ—à–Ω–æ! –ü—Ä–æ–µ–∫—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω:${NC}"
echo -e "${GREEN}    ‚Ä¢ –í–µ—Ä—Å–∏—è: ${NEW_VERSION}${NC}"
echo -e "${GREEN}    ‚Ä¢ –í–µ—Ç–∫–∞: ${BRANCH_NAME}${NC}"
echo -e "${GREEN}    ‚Ä¢ –¢–µ–≥: ${TAG_NAME}${NC}"
echo -e "${GREEN}    ‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ: ${DESCRIPTION}${NC}"

echo -e "${BLUE}üîó –°—Å—ã–ª–∫–∏:${NC}"
echo -e "${BLUE}    ‚Ä¢ –í–µ—Ç–∫–∞: $(git remote get-url origin | sed 's/\.git$//')/tree/${BRANCH_NAME}${NC}"
echo -e "${BLUE}    ‚Ä¢ –†–µ–ª–∏–∑: $(git remote get-url origin | sed 's/\.git$//')/releases/tag/${TAG_NAME}${NC}"

echo -e "${GREEN}‚ú® –ì–æ—Ç–æ–≤–æ!${NC}"