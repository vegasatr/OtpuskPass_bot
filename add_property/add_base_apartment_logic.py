import os
import sys
from sqlalchemy.orm import Session
from sqlalchemy.exc import IntegrityError
from datetime import datetime
from dotenv import load_dotenv
import asyncio
from telegram import Bot
from telegram.error import TelegramError

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path, —á—Ç–æ–±—ã –∏–º–ø–æ—Ä—Ç—ã –∏–∑ src —Ä–∞–±–æ—Ç–∞–ª–∏
script_dir = os.path.dirname(os.path.abspath(__file__))
project_root = os.path.abspath(os.path.join(script_dir, '..'))
sys.path.insert(0, project_root)

from src.database.models import Apartment, UserRole #
from src.database.migrations import init_db #

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv(os.path.join(project_root, '.env')) # –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ .env

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = os.getenv('BOT_TOKEN')
if not BOT_TOKEN:
    print("\033[91m‚ùå –û–®–ò–ë–ö–ê: –¢–æ–∫–µ–Ω BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ –≤ Telegram.\033[0m")
    sys.exit(1)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram Bot
bot = Bot(token=BOT_TOKEN)

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å —Ñ–∞–π–ª–∞–º–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–≤–∞—Ä—Ç–∏—Ä (–æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞)
ADD_PROPERTY_BASE_DIR = os.path.join(project_root, 'add_property')

# –°–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤ –∏–∑ –¢–ó –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–ø–∞–ø–æ–∫
CITIES = ["phuket", "bangkok", "pattaya", "samui", "phi_phi", "krabi"]

# –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã —à–∞–±–ª–æ–Ω–æ–≤
REQUIRED_DETAILS_FILE = "apartment_details.txt" # –ï–¥–∏–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –≤—Å–µ—Ö –¥–µ—Ç–∞–ª–µ–π
REQUIRED_VIDEO_FILE_LOCAL = "video.mp4" # –ò–º—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–µ–æ—Ñ–∞–π–ª–∞

def create_city_folders_and_templates():
    """–°–æ–∑–¥–∞–µ—Ç –ø–∞–ø–∫–∏ –≥–æ—Ä–æ–¥–æ–≤ –∏ –ø—É—Å—Ç—ã–µ —Ñ–∞–π–ª—ã —à–∞–±–ª–æ–Ω–æ–≤, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç."""
    print(f"\033[94m--- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–æ–∫ –∏ —à–∞–±–ª–æ–Ω–æ–≤ –≤ {ADD_PROPERTY_BASE_DIR} ---\033[0m")
    for city in CITIES:
        city_path = os.path.join(ADD_PROPERTY_BASE_DIR, city)
        os.makedirs(city_path, exist_ok=True)
        print(f"  \033[92m‚úî –ü–∞–ø–∫–∞: {city_path}\033[0m")

        details_file_path = os.path.join(city_path, REQUIRED_DETAILS_FILE)
        if not os.path.exists(details_file_path):
            with open(details_file_path, 'w', encoding='utf-8') as f:
                f.write(f"# –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ {city.capitalize()}\n")
                f.write("address=–£–ª–∏—Ü–∞, –ù–æ–º–µ—Ä –î–æ–º–∞, –†–∞–π–æ–Ω\n")
                f.write("area_sqm=50.0\n")
                f.write("num_bedrooms=1\n")
                f.write("\n")
                f.write("# –û–ø–∏—Å–∞–Ω–∏–µ –≤—Å–µ–π —Ç–µ—Ö–Ω–∏–∫–∏, –º–µ–±–µ–ª–∏ –∏ —É–¥–æ–±—Å—Ç–≤ (–±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤, –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç)\n")
                f.write("features=–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä, —Å—Ç–∏—Ä–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞, –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–Ω–∞—è –∫—É—Ö–Ω—è, Wi-Fi, —Ç–µ–ª–µ–≤–∏–∑–æ—Ä, –±–∞–ª–∫–æ–Ω.\n")
                f.write("\n")
                f.write("# –û–ø–∏—Å–∞–Ω–∏–µ –æ–±—â–∏—Ö —É–¥–æ–±—Å—Ç–≤ –≤ –¥–æ–º–µ (–±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤, –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç)\n")
                f.write("amenities=–ë–∞—Å—Å–µ–π–Ω, —Å–ø–æ—Ä—Ç–∑–∞–ª, –ø–∞—Ä–∫–æ–≤–∫–∞, –æ—Ö—Ä–∞–Ω–∞, –∫–æ–Ω—Å—å–µ—Ä–∂.\n")
                f.write("\n")
                f.write("# –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –±–ª–∏–∂–∞–π—à–∏—Ö –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π, –ø–ª—è–∂–µ–π, –º–∞–≥–∞–∑–∏–Ω–æ–≤, —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ (–±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤, –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç)\n")
                f.write("nearby=–ü–ª—è–∂ –≤ 5 –º–∏–Ω—É—Ç–∞—Ö, —Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç, –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤, —Ä—ã–Ω–æ–∫.\n")
            print(f"    \033[93m‚ö† –°–æ–∑–¥–∞–Ω —à–∞–±–ª–æ–Ω: {REQUIRED_DETAILS_FILE}\033[0m")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–µ–æ—Ñ–∞–π–ª–∞ (–¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è)
        video_local_path = os.path.join(city_path, REQUIRED_VIDEO_FILE_LOCAL)
        if not os.path.exists(video_local_path):
            print(f"    \033[93m‚ö† –í–ù–ò–ú–ê–ù–ò–ï: –õ–æ–∫–∞–ª—å–Ω—ã–π –≤–∏–¥–µ–æ—Ñ–∞–π–ª {REQUIRED_VIDEO_FILE_LOCAL} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ {city_path}. –ï–≥–æ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é.\033[0m")
    print("\033[94m--- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–æ–∫ –∏ —à–∞–±–ª–æ–Ω–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ---\033[0m")

async def upload_video_to_telegram(video_path: str) -> str | None:
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤–∏–¥–µ–æ—Ñ–∞–π–ª –≤ Telegram –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç file_id."""
    print(f"  \033[96müì§ –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ—Ñ–∞–π–ª–∞ '{os.path.basename(video_path)}' –≤ Telegram...\033[0m")
    try:
        with open(video_path, 'rb') as video_file:
            TEST_CHAT_ID = os.getenv('TELEGRAM_TEST_CHAT_ID')
            if not TEST_CHAT_ID:
                print("\033[91m  ‚ùå –û–®–ò–ë–ö–ê: TELEGRAM_TEST_CHAT_ID –Ω–µ —É–∫–∞–∑–∞–Ω –≤ .env –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–π chat_id.\033[0m")
                print("\033[91m  (–í—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å —Å–≤–æ–π chat_id, –Ω–∞–ø–∏—Å–∞–≤ @userinfobot –≤ Telegram)\033[0m")
                return None

            message = await bot.send_video(chat_id=TEST_CHAT_ID, video=video_file, disable_notification=True)
            video_file_id = message.video.file_id
            print(f"  \033[92m‚úÖ –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ. file_id: {video_file_id}\033[0m")
            return video_file_id
    except TelegramError as e:
        print(f"\033[91m  ‚ùå –û—à–∏–±–∫–∞ Telegram API –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏–¥–µ–æ: {e}\033[0m")
        return None
    except Exception as e:
        print(f"\033[91m  ‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏–¥–µ–æ: {e}\033[0m")
        return None

async def process_city_apartment(city: str) -> bool:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ñ–∞–π–ª—ã –¥–ª—è –æ–¥–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –∏ –ø—ã—Ç–∞–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É –≤ –ë–î.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True –≤ —Å–ª—É—á–∞–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, False –∏–Ω–∞—á–µ.
    """
    print(f"\n\033[94m--- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ—Ä–æ–¥–∞: {city.capitalize()} ---\033[0m")

    db_session = init_db() #
    try:
        city_path = os.path.join(ADD_PROPERTY_BASE_DIR, city)
        
        details_file_path = os.path.join(city_path, REQUIRED_DETAILS_FILE)
        video_local_path = os.path.join(city_path, REQUIRED_VIDEO_FILE_LOCAL)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
        missing_files = []
        if not os.path.exists(details_file_path): missing_files.append(REQUIRED_DETAILS_FILE)
        if not os.path.exists(video_local_path): missing_files.append(REQUIRED_VIDEO_FILE_LOCAL)

        if missing_files:
            print(f"\033[91m  ‚ùå –û–®–ò–ë–ö–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è '{city.capitalize()}': {', '.join(missing_files)}.\033[0m")
            print("\033[91m  –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª—ã 'apartment_details.txt' –∏ 'video.mp4' –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç.\033[0m")
            return False
        
        # –ß–∏—Ç–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∏–∑ –µ–¥–∏–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        details_data = {}
        current_section = None
        with open(details_file_path, 'r', encoding='utf-8') as f:
            for line in f:
                line = line.strip()
                if not line or line.startswith('#'): # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
                    continue
                
                if '=' in line: # –≠—Ç–æ –ø–∞—Ä–∞ –∫–ª—é—á=–∑–Ω–∞—á–µ–Ω–∏–µ
                    key, value = line.split('=', 1)
                    details_data[key.strip()] = value.strip()
                    current_section = key.strip() # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Å–µ–∫—Ü–∏—é –¥–ª—è –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã—Ö –ø–æ–ª–µ–π
                else: # –≠—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è
                    if current_section and current_section in details_data:
                        details_data[current_section] += "\n" + line
                    else:
                        print(f"\033[93m  ‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –≤ apartment_details.txt: '{line}'\033[0m")

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏—Ö –Ω–∞–ª–∏—á–∏–µ
        address = details_data.get('address')
        description = details_data.get('description') # –¢–µ–ø–µ—Ä—å —ç—Ç–æ –æ–±—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
        features = details_data.get('features') # –£–¥–æ–±—Å—Ç–≤–∞ –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ
        amenities = details_data.get('amenities') # –£–¥–æ–±—Å—Ç–≤–∞ –≤ –¥–æ–º–µ
        nearby = details_data.get('nearby') # –û–∫—Ä—É–∂–µ–Ω–∏–µ

        try:
            area_sqm = float(details_data.get('area_sqm'))
            num_bedrooms = int(details_data.get('num_bedrooms'))
        except (ValueError, TypeError):
            print(f"\033[91m  ‚ùå –û–®–ò–ë–ö–ê: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è 'area_sqm' –∏–ª–∏ 'num_bedrooms' –≤ '{REQUIRED_DETAILS_FILE}' –¥–ª—è '{city.capitalize()}'.\033[0m")
            return False

        required_text_fields = {
            'address': address,
            'description': description,
            'features': features,
            'amenities': amenities,
            'nearby': nearby
        }

        # –£—Ç–æ—á–Ω—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —à–∞–±–ª–æ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
        template_text_patterns = {
            'address': "–£–ª–∏—Ü–∞, –ù–æ–º–µ—Ä –î–æ–º–∞",
            'description': "–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã",
            'features': "–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä, —Å—Ç–∏—Ä–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞",
            'amenities': "–ë–∞—Å—Å–µ–π–Ω, —Å–ø–æ—Ä—Ç–∑–∞–ª",
            'nearby': "–ü–ª—è–∂ –≤ 5 –º–∏–Ω—É—Ç–∞—Ö"
        }

        missing_text_fields = []
        for field, value in required_text_fields.items():
            if not value:
                missing_text_fields.append(field)
            elif template_text_patterns[field] in value:
                missing_text_fields.append(f"{field} (—Å–æ–¥–µ—Ä–∂–∏—Ç —à–∞–±–ª–æ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç)")

        if missing_text_fields:
            print(f"\033[91m  ‚ùå –û–®–ò–ë–ö–ê: –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è –≤ '{REQUIRED_DETAILS_FILE}' –¥–ª—è '{city.capitalize()}' –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç —à–∞–±–ª–æ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: {', '.join(missing_text_fields)}.\033[0m")
            return False
        
        # --- –õ–æ–≥–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è file_id ---
        apartment_video_id = None
        existing_apartment = db_session.query(Apartment).filter(
            Apartment.city == city,
            Apartment.apartment_type == "Base" #
        ).first()

        if existing_apartment:
            print(f"  \033[92m‚úî –ë–∞–∑–æ–≤–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –¥–ª—è –≥–æ—Ä–æ–¥–∞ '{city.capitalize()}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (ID: {existing_apartment.id}).\033[0m")
            if existing_apartment.video_url and existing_apartment.video_url.startswith('BAAD'): # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —ç—Ç–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ Telegram file_id
                apartment_video_id = existing_apartment.video_url
                print(f"  \033[96m‚ôªÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π file_id: {apartment_video_id}\033[0m")
            else:
                print(f"  \033[93m‚ö†Ô∏è –°—É—â–µ—Å—Ç–≤—É—é—â–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–µ –∏–º–µ–µ—Ç file_id Telegram –∏–ª–∏ –æ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω. –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ.\033[0m")
                apartment_video_id = await upload_video_to_telegram(video_local_path)
                if not apartment_video_id:
                    print(f"\033[91m  ‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å file_id –¥–ª—è '{city.capitalize()}'. –ü—Ä–æ–ø—É—Å–∫.\033[0m")
                    return False
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–≤–∞—Ä—Ç–∏—Ä—É
            existing_apartment.address = address
            existing_apartment.description = description # –û–±—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
            existing_apartment.features = features # –£–¥–æ–±—Å—Ç–≤–∞ –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ
            existing_apartment.nearby_attractions = nearby # –û–∫—Ä—É–∂–µ–Ω–∏–µ
            existing_apartment.status = "available"
            existing_apartment.area_sqm = area_sqm
            existing_apartment.num_bedrooms = num_bedrooms
            existing_apartment.video_url = apartment_video_id # –û–±–Ω–æ–≤–ª—è–µ–º file_id
            
            # –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ —Ä–µ—à–∏—Ç—å, –∫—É–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å amenities (–£–¥–æ–±—Å—Ç–≤–∞ –≤ –¥–æ–º–µ)
            # –í –≤–∞—à–µ–π –º–æ–¥–µ–ª–∏ Apartment –Ω–µ—Ç –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –ø–æ–ª—è –¥–ª—è "–£–¥–æ–±—Å—Ç–≤–∞ –≤ –¥–æ–º–µ".
            # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏—Ö –∫ features –∏–ª–∏ description, –∏–ª–∏ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –º–æ–¥–µ–ª—å.
            # –ü–æ–∫–∞ –¥–æ–±–∞–≤–∏–º amenities –≤ description, –µ—Å–ª–∏ –Ω–µ—Ç –¥—Ä—É–≥–æ–≥–æ –º–µ—Å—Ç–∞.
            # –õ–£–ß–®–ï: –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –ø–æ–ª–µ 'amenities' –≤ src/database/models.py –∏ src/database/migrations.py
            # –ê –ø–æ–∫–∞ —á—Ç–æ, –≤—Ä–µ–º–µ–Ω–Ω–æ, –¥–æ–±–∞–≤–∏–º –∏—Ö –∫ description.
            if amenities:
                existing_apartment.description += f"\n\n–£–¥–æ–±—Å—Ç–≤–∞ –≤ –¥–æ–º–µ: {amenities}"


            db_session.add(existing_apartment)
            db_session.commit()
            db_session.refresh(existing_apartment)
            print(f"  \033[92m‚úÖ –ë–∞–∑–æ–≤–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –¥–ª—è '{city.capitalize()}' —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. ID: {existing_apartment.id}\033[0m")
            return True

        else:
            # –ï—Å–ª–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –Ω–µ—Ç, –∑–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–µ–æ –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
            apartment_video_id = await upload_video_to_telegram(video_local_path)
            if not apartment_video_id:
                print(f"\033[91m  ‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å file_id –¥–ª—è '{city.capitalize()}'. –ü—Ä–æ–ø—É—Å–∫.\033[0m")
                return False

            new_apartment_description = description
            if amenities:
                new_apartment_description += f"\n\n–£–¥–æ–±—Å—Ç–≤–∞ –≤ –¥–æ–º–µ: {amenities}"

            new_apartment = Apartment(
                city=city,
                address=address,
                description=new_apartment_description, # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –æ–±—â–µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è
                video_url=apartment_video_id, # –°–æ—Ö—Ä–∞–Ω—è–µ–º file_id
                features=features, # –£–¥–æ–±—Å—Ç–≤–∞ –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ
                nearby_attractions=nearby, # –û–∫—Ä—É–∂–µ–Ω–∏–µ
                status="available",
                area_sqm=area_sqm,
                num_bedrooms=num_bedrooms,
                apartment_type="Base", #
                owner_id=None # –ë–∞–∑–æ–≤–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–µ –∏–º–µ–µ—Ç owner_id
            )

            db_session.add(new_apartment)
            db_session.commit()
            db_session.refresh(new_apartment)
            print(f"  \033[92m‚úÖ –ë–∞–∑–æ–≤–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –¥–ª—è '{city.capitalize()}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö. ID: {new_apartment.id}\033[0m")
            return True
    except TelegramError as e:
        print(f"\033[91m  ‚ùå –û—à–∏–±–∫–∞ Telegram API –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã –¥–ª—è '{city.capitalize()}': {e}\033[0m")
        db_session.rollback()
        return False
    except IntegrityError as e:
        db_session.rollback()
        print(f"\033[91m  ‚ùå –û–®–ò–ë–ö–ê –ë–î –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –¥–ª—è '{city.capitalize()}': {e}\033[0m")
        return False
    except Exception as e:
        db_session.rollback()
        print(f"\033[91m  ‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã –¥–ª—è '{city.capitalize()}': {e}\n  –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: {sys.exc_info()}\033[0m")
        return False
    finally:
        db_session.close()

async def main_async():
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–æ–≤."""
    create_city_folders_and_templates() # –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –∏ —à–∞–±–ª–æ–Ω—ã

    print("\n\033[94m--- –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑–æ–≤—ã—Ö –∫–≤–∞—Ä—Ç–∏—Ä ---\033[0m")
    overall_success = True
    for city in CITIES:
        if not await process_city_apartment(city): # –í–∞–∂–Ω–æ: –≤—ã–∑—ã–≤–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
            overall_success = False
    
    if overall_success:
        print("\n\033[92müéâ –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±–∞–∑–æ–≤—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã.\033[0m")
        sys.exit(0)
    else:
        print("\n\033[91m‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –±–∞–∑–æ–≤—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã –Ω–µ –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã/–æ–±–Ω–æ–≤–ª–µ–Ω—ã –∏–∑-–∑–∞ –æ—à–∏–±–æ–∫. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—ã—à–µ.\033[0m")
        sys.exit(1)

if __name__ == '__main__':
    # –≠—Ç–∞ —á–∞—Å—Ç—å –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –∏–∑ bash-—Å–∫—Ä–∏–ø—Ç–∞
    # –î–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –Ω—É–∂–Ω–∞ —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ asyncio.run
    asyncio.run(main_async()) 