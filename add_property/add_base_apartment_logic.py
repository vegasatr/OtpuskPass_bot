import os
import sys
from sqlalchemy.orm import Session
from sqlalchemy.exc import IntegrityError
from datetime import datetime
from dotenv import load_dotenv
import asyncio
from telegram import Bot
from telegram.error import TelegramError

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path, —á—Ç–æ–±—ã –∏–º–ø–æ—Ä—Ç—ã –∏–∑ src —Ä–∞–±–æ—Ç–∞–ª–∏
script_dir = os.path.dirname(os.path.abspath(__file__))
project_root = os.path.abspath(os.path.join(script_dir, '..'))
sys.path.insert(0, project_root)

from src.database.models import Apartment, UserRole #
from src.database.migrations import init_db #

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv(os.path.join(project_root, '.env')) # –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ .env

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = os.getenv('BOT_TOKEN')
if not BOT_TOKEN:
    print("\033[91m‚ùå –û–®–ò–ë–ö–ê: –¢–æ–∫–µ–Ω BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ –≤ Telegram.\033[0m")
    sys.exit(1)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram Bot
bot = Bot(token=BOT_TOKEN)

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å —Ñ–∞–π–ª–∞–º–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–≤–∞—Ä—Ç–∏—Ä (–æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞)
ADD_PROPERTY_BASE_DIR = os.path.join(project_root, 'add_property')

# –°–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤ –∏–∑ –¢–ó –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–ø–∞–ø–æ–∫
CITIES = ["phuket", "bangkok", "pattaya", "samui", "phi_phi", "krabi"]

# –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã —à–∞–±–ª–æ–Ω–æ–≤ –æ–ø–∏—Å–∞–Ω–∏–π
REQUIRED_DESCRIPTION_FILES = ["description.txt", "features.txt", "nearby_attractions.txt"]
REQUIRED_VIDEO_FILE_LOCAL = "video.mp4" # –ò–º—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–µ–æ—Ñ–∞–π–ª–∞
# –ù–æ–≤—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
REQUIRED_METADATA_FILES = ["metadata.txt"]

def create_city_folders_and_templates():
    """–°–æ–∑–¥–∞–µ—Ç –ø–∞–ø–∫–∏ –≥–æ—Ä–æ–¥–æ–≤ –∏ –ø—É—Å—Ç—ã–µ —Ñ–∞–π–ª—ã —à–∞–±–ª–æ–Ω–æ–≤, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç."""
    print(f"\033[94m--- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–æ–∫ –∏ —à–∞–±–ª–æ–Ω–æ–≤ –≤ {ADD_PROPERTY_BASE_DIR} ---\033[0m")
    for city in CITIES:
        city_path = os.path.join(ADD_PROPERTY_BASE_DIR, city)
        os.makedirs(city_path, exist_ok=True)
        print(f"  \033[92m‚úî –ü–∞–ø–∫–∞: {city_path}\033[0m")

        for filename in REQUIRED_DESCRIPTION_FILES + REQUIRED_METADATA_FILES:
            file_path = os.path.join(city_path, filename)
            if not os.path.exists(file_path):
                with open(file_path, 'w', encoding='utf-8') as f:
                    if filename == "description.txt":
                        f.write(f"–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ {city.capitalize()}.\n")
                    elif filename == "features.txt":
                        f.write("–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä, —Å—Ç–∏—Ä–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞, –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–Ω–∞—è –∫—É—Ö–Ω—è, Wi-Fi, —Ç–µ–ª–µ–≤–∏–∑–æ—Ä.\n")
                    elif filename == "nearby_attractions.txt":
                        f.write("–†—è–¥–æ–º —Å –ø–ª—è–∂–µ–º, –∫–∞—Ñ–µ, –º–∞–≥–∞–∑–∏–Ω—ã, –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.\n")
                    elif filename == "metadata.txt":
                        f.write(f"address=–ë–∞–∑–æ–≤–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –≤ {city.capitalize()} (–∞–¥—Ä–µ—Å)\n")
                        f.write("area_sqm=50.0\n")
                        f.write("num_bedrooms=1\n")
                print(f"    \033[93m‚ö† –°–æ–∑–¥–∞–Ω —à–∞–±–ª–æ–Ω: {filename}\033[0m")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–µ–æ—Ñ–∞–π–ª–∞ (–¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è)
        video_local_path = os.path.join(city_path, REQUIRED_VIDEO_FILE_LOCAL)
        if not os.path.exists(video_local_path):
            print(f"    \033[93m‚ö† –í–ù–ò–ú–ê–ù–ò–ï: –õ–æ–∫–∞–ª—å–Ω—ã–π –≤–∏–¥–µ–æ—Ñ–∞–π–ª {REQUIRED_VIDEO_FILE_LOCAL} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ {city_path}. –ï–≥–æ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é.\033[0m")
    print("\033[94m--- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–æ–∫ –∏ —à–∞–±–ª–æ–Ω–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ---\033[0m")

async def upload_video_to_telegram(video_path: str) -> str | None:
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤–∏–¥–µ–æ—Ñ–∞–π–ª –≤ Telegram –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç file_id."""
    print(f"  \033[96müì§ –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ—Ñ–∞–π–ª–∞ '{os.path.basename(video_path)}' –≤ Telegram...\033[0m")
    try:
        with open(video_path, 'rb') as video_file:
            TEST_CHAT_ID = os.getenv('TELEGRAM_TEST_CHAT_ID')
            if not TEST_CHAT_ID:
                print("\033[91m  ‚ùå –û–®–ò–ë–ö–ê: TELEGRAM_TEST_CHAT_ID –Ω–µ —É–∫–∞–∑–∞–Ω –≤ .env –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–π chat_id.\033[0m")
                print("\033[91m  (–í—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å —Å–≤–æ–π chat_id, –Ω–∞–ø–∏—Å–∞–≤ @userinfobot –≤ Telegram)\033[0m")
                return None

            message = await bot.send_video(chat_id=TEST_CHAT_ID, video=video_file, disable_notification=True)
            video_file_id = message.video.file_id
            print(f"  \033[92m‚úÖ –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ. file_id: {video_file_id}\033[0m")
            return video_file_id
    except TelegramError as e:
        print(f"\033[91m  ‚ùå –û—à–∏–±–∫–∞ Telegram API –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏–¥–µ–æ: {e}\033[0m")
        return None
    except Exception as e:
        print(f"\033[91m  ‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏–¥–µ–æ: {e}\033[0m")
        return None

async def process_city_apartment(city: str) -> bool:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ñ–∞–π–ª—ã –¥–ª—è –æ–¥–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –∏ –ø—ã—Ç–∞–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É –≤ –ë–î.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True –≤ —Å–ª—É—á–∞–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, False –∏–Ω–∞—á–µ.
    """
    print(f"\n\033[94m--- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ—Ä–æ–¥–∞: {city.capitalize()} ---\033[0m")

    db_session = init_db() #
    try:
        city_path = os.path.join(ADD_PROPERTY_BASE_DIR, city)
        
        description_path = os.path.join(city_path, "description.txt")
        features_path = os.path.join(city_path, "features.txt")
        nearby_attractions_path = os.path.join(city_path, "nearby_attractions.txt")
        metadata_path = os.path.join(city_path, "metadata.txt") # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
        video_local_path = os.path.join(city_path, REQUIRED_VIDEO_FILE_LOCAL)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
        missing_files = []
        if not os.path.exists(description_path): missing_files.append("description.txt")
        if not os.path.exists(features_path): missing_files.append("features.txt")
        if not os.path.exists(nearby_attractions_path): missing_files.append("nearby_attractions.txt")
        if not os.path.exists(metadata_path): missing_files.append("metadata.txt")
        if not os.path.exists(video_local_path): missing_files.append(REQUIRED_VIDEO_FILE_LOCAL)

        if missing_files:
            print(f"\033[91m  ‚ùå –û–®–ò–ë–ö–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è '{city.capitalize()}': {', '.join(missing_files)}.\033[0m")
            print("\033[91m  –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã —à–∞–±–ª–æ–Ω–æ–≤ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã, –∞ –≤–∏–¥–µ–æ—Ñ–∞–π–ª –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç.\033[0m")
            return False
        
        # –ß–∏—Ç–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
        with open(description_path, 'r', encoding='utf-8') as f:
            description = f.read().strip()
        with open(features_path, 'r', encoding='utf-8') as f:
            features = f.read().strip()
        with open(nearby_attractions_path, 'r', encoding='utf-8') as f:
            nearby_attractions = f.read().strip()
        
        # –ß–∏—Ç–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
        metadata = {}
        with open(metadata_path, 'r', encoding='utf-8') as f:
            for line in f:
                key, value = line.strip().split('=', 1)
                metadata[key] = value
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏—Ö
        address = metadata.get('address')
        area_sqm = float(metadata.get('area_sqm')) if metadata.get('area_sqm') else None
        num_bedrooms = int(metadata.get('num_bedrooms')) if metadata.get('num_bedrooms') else None

        if not address or not area_sqm or not num_bedrooms:
            print(f"\033[91m  ‚ùå –û–®–ò–ë–ö–ê: –§–∞–π–ª 'metadata.txt' –¥–ª—è '{city.capitalize()}' –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (address, area_sqm, num_bedrooms).\033[0m")
            return False

        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —à–∞–±–ª–æ–Ω—ã –Ω–µ –ø—É—Å—Ç—ã–µ (–∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ...")
        if not description or "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ –æ–ø–∏—Å–∞–Ω–∏–µ" in description:
            print(f"\033[91m  ‚ùå –û–®–ò–ë–ö–ê: –§–∞–π–ª 'description.txt' –¥–ª—è '{city.capitalize()}' –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —à–∞–±–ª–æ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç.\033[0m")
            return False
        if not features or "–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä, —Å—Ç–∏—Ä–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞, –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–Ω–∞—è –∫—É—Ö–Ω—è" in features: # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —à–∞–±–ª–æ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
            print(f"\033[91m  ‚ùå –û–®–ò–ë–ö–ê: –§–∞–π–ª 'features.txt' –¥–ª—è '{city.capitalize()}' –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —à–∞–±–ª–æ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç.\033[0m")
            return False
        if not nearby_attractions or "–†—è–¥–æ–º —Å –ø–ª—è–∂–µ–º, –∫–∞—Ñ–µ, –º–∞–≥–∞–∑–∏–Ω—ã" in nearby_attractions: # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —à–∞–±–ª–æ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
            print(f"\033[91m  ‚ùå –û–®–ò–ë–ö–ê: –§–∞–π–ª 'nearby_attractions.txt' –¥–ª—è '{city.capitalize()}' –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —à–∞–±–ª–æ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç.\033[0m")
            return False
        
        # --- –õ–æ–≥–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è file_id ---
        apartment_video_id = None
        existing_apartment = db_session.query(Apartment).filter(
            Apartment.city == city,
            Apartment.apartment_type == "Base" #
        ).first()

        if existing_apartment:
            # –ï—Å–ª–∏ –∫–≤–∞—Ä—Ç–∏—Ä–∞ —É–∂–µ –µ—Å—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë video_url (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —ç—Ç–æ file_id)
            print(f"  \033[92m‚úî –ë–∞–∑–æ–≤–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –¥–ª—è –≥–æ—Ä–æ–¥–∞ '{city.capitalize()}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (ID: {existing_apartment.id}).\033[0m")
            if existing_apartment.video_url and existing_apartment.video_url.startswith('BAAD'): # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —ç—Ç–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ Telegram file_id
                apartment_video_id = existing_apartment.video_url
                print(f"  \033[96m‚ôªÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π file_id: {apartment_video_id}\033[0m")
            else:
                print(f"  \033[93m‚ö†Ô∏è –°—É—â–µ—Å—Ç–≤—É—é—â–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–µ –∏–º–µ–µ—Ç file_id Telegram –∏–ª–∏ –æ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω. –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ.\033[0m")
                # –ï—Å–ª–∏ file_id –Ω–µ—Ç –∏–ª–∏ –æ–Ω –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π, –ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–Ω–æ–≤–∞
                apartment_video_id = await upload_video_to_telegram(video_local_path)
                if not apartment_video_id:
                    print(f"\033[91m  ‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å file_id –¥–ª—è '{city.capitalize()}'. –ü—Ä–æ–ø—É—Å–∫.\033[0m")
                    return False
            
            # –ï—Å–ª–∏ –∫–≤–∞—Ä—Ç–∏—Ä–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –µ—ë –¥–∞–Ω–Ω—ã–µ, –∫—Ä–æ–º–µ video_url
            # –ï—Å–ª–∏ video_url –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω (–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω), —Ç–æ –æ–Ω —Ç–æ–∂–µ –æ–±–Ω–æ–≤–∏—Ç—Å—è
            existing_apartment.address = address
            existing_apartment.description = description
            existing_apartment.features = features
            existing_apartment.nearby_attractions = nearby_attractions
            existing_apartment.status = "available"
            existing_apartment.area_sqm = area_sqm
            existing_apartment.num_bedrooms = num_bedrooms
            existing_apartment.video_url = apartment_video_id # –û–±–Ω–æ–≤–ª—è–µ–º file_id

            db_session.add(existing_apartment) # –î–æ–±–∞–≤–ª—è–µ–º –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            db_session.commit()
            db_session.refresh(existing_apartment)
            print(f"  \033[92m‚úÖ –ë–∞–∑–æ–≤–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –¥–ª—è '{city.capitalize()}' —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. ID: {existing_apartment.id}\033[0m")
            return True

        else:
            # –ï—Å–ª–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –Ω–µ—Ç, –∑–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–µ–æ –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
            apartment_video_id = await upload_video_to_telegram(video_local_path)
            if not apartment_video_id:
                print(f"\033[91m  ‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å file_id –¥–ª—è '{city.capitalize()}'. –ü—Ä–æ–ø—É—Å–∫.\033[0m")
                return False

            new_apartment = Apartment(
                city=city,
                address=address,
                description=description,
                video_url=apartment_video_id, # –°–æ—Ö—Ä–∞–Ω—è–µ–º file_id
                features=features,
                nearby_attractions=nearby_attractions,
                status="available",
                area_sqm=area_sqm,
                num_bedrooms=num_bedrooms,
                apartment_type="Base", #
                owner_id=None # –ë–∞–∑–æ–≤–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–µ –∏–º–µ–µ—Ç owner_id
            )

            db_session.add(new_apartment)
            db_session.commit()
            db_session.refresh(new_apartment)
            print(f"  \033[92m‚úÖ –ë–∞–∑–æ–≤–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –¥–ª—è '{city.capitalize()}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö. ID: {new_apartment.id}\033[0m")
            return True
    except TelegramError as e:
        print(f"\033[91m  ‚ùå –û—à–∏–±–∫–∞ Telegram API –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã –¥–ª—è '{city.capitalize()}': {e}\033[0m")
        db_session.rollback()
        return False
    except IntegrityError as e:
        db_session.rollback()
        print(f"\033[91m  ‚ùå –û–®–ò–ë–ö–ê –ë–î –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –¥–ª—è '{city.capitalize()}': {e}\033[0m")
        return False
    except Exception as e:
        db_session.rollback()
        print(f"\033[91m  ‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã –¥–ª—è '{city.capitalize()}': {e}\033[0m")
        return False
    finally:
        db_session.close()

async def main_async():
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–æ–≤."""
    create_city_folders_and_templates() # –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –∏ —à–∞–±–ª–æ–Ω—ã

    print("\n\033[94m--- –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑–æ–≤—ã—Ö –∫–≤–∞—Ä—Ç–∏—Ä ---\033[0m")
    overall_success = True
    for city in CITIES:
        if not await process_city_apartment(city): # –í–∞–∂–Ω–æ: –≤—ã–∑—ã–≤–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
            overall_success = False
    
    if overall_success:
        print("\n\033[92müéâ –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±–∞–∑–æ–≤—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã.\033[0m")
        sys.exit(0)
    else:
        print("\n\033[91m‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –±–∞–∑–æ–≤—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã –Ω–µ –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã/–æ–±–Ω–æ–≤–ª–µ–Ω—ã –∏–∑-–∑–∞ –æ—à–∏–±–æ–∫. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—ã—à–µ.\033[0m")
        sys.exit(1)

if __name__ == '__main__':
    # –≠—Ç–∞ —á–∞—Å—Ç—å –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –∏–∑ bash-—Å–∫—Ä–∏–ø—Ç–∞
    # –î–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –Ω—É–∂–Ω–∞ —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ asyncio.run
    asyncio.run(main_async()) 